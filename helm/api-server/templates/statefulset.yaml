apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
  serviceName: {{ .Values.database.serviceName }}
  replicas: {{ .Values.database.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: "{{ .Values.database.name }}-sa"  # Added ServiceAccount
      automountServiceAccountToken: false
      containers:
      - name: {{ .Values.database.container.name }}
        image: {{ .Values.database.container.image }}
        ports:
        {{- range .Values.database.container.ports }}
        - containerPort: {{ .containerPort }}
          name: {{ .name }}
        {{- end }}
        args:
        {{- range .Values.database.container.args }}
          - {{ . }}
        {{- end }}
        volumeMounts:
        {{- range .Values.database.container.volumeMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
        {{- end }}
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.container.env.MYSQL_ROOT_PASSWORD_SECRET }}
                key: {{ .Values.database.container.env.MYSQL_ROOT_PASSWORD_KEY }}
          - name: MYSQL_INITDB_SKIP_TZINFO
            value: "{{ .Values.database.container.env.MYSQL_INITDB_SKIP_TZINFO }}"
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5

        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysqladmin ping -h 127.0.0.1 -u root"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

  volumeClaimTemplates:
  - metadata:
      name: {{ (index .Values.database.container.volumeMounts 0).name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.database.storage.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.database.storage.size }}
