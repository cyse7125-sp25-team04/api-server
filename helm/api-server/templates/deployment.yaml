apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.deployment.labels.app }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.labels.app }}
    spec:
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}

      # âœ… Corrected imagePullSecrets to iterate over the list
      imagePullSecrets:
      {{- range .Values.deployment.imagePullSecrets }}
        - name: {{ .name }}
      {{- end }}

      containers:
      - name: {{ .Values.deployment.container.name }}
        image: {{ .Values.deployment.container.image }}
        imagePullPolicy: {{ .Values.deployment.container.imagePullPolicy }}
        ports:
          {{- range .Values.deployment.container.ports }}
          - containerPort: {{ .containerPort }}
          {{- end }}
        env:
        - name: DB_HOST
          value: "{{ .Values.deployment.container.env.DB_HOST }}"
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.deployment.container.env.DB_PORT_CONFIGMAP }}"
              key: "{{ .Values.deployment.container.env.DB_PORT_KEY }}"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.deployment.container.env.DB_USERNAME_SECRET }}"
              key: "{{ .Values.deployment.container.env.DB_USERNAME_KEY }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.deployment.container.env.DB_PASSWORD_SECRET }}"
              key: "{{ .Values.deployment.container.env.DB_PASSWORD_KEY }}"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.deployment.container.env.DB_NAME_CONFIGMAP }}"
              key: "{{ .Values.deployment.container.env.DB_NAME_KEY }}"
        - name: STORAGE_BUCKET_NAME
          value: "{{ .Values.deployment.container.env.STORAGE_BUCKET_NAME }}"
        - name: GOOGLE_PROJECT_ID
          value: "{{ .Values.deployment.container.env.GOOGLE_PROJECT_ID }}"

      initContainers:
      - name: {{ .Values.deployment.initContainer.name }}
        image: {{ .Values.deployment.initContainer.image }}
        imagePullPolicy: {{ .Values.deployment.initContainer.imagePullPolicy }}
        env:
        - name: DB_HOST
          value: "{{ .Values.deployment.initContainer.env.DB_HOST }}"
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.deployment.initContainer.env.DB_PORT_CONFIGMAP }}"
              key: "{{ .Values.deployment.initContainer.env.DB_PORT_KEY }}"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.deployment.initContainer.env.DB_USERNAME_SECRET }}"
              key: "{{ .Values.deployment.initContainer.env.DB_USERNAME_KEY }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.deployment.initContainer.env.DB_PASSWORD_SECRET }}"
              key: "{{ .Values.deployment.initContainer.env.DB_PASSWORD_KEY }}"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.deployment.initContainer.env.DB_NAME_CONFIGMAP }}"
              key: "{{ .Values.deployment.initContainer.env.DB_NAME_KEY }}"
        - name: DB_SCHEMA
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.deployment.initContainer.env.DB_SCHEMA_CONFIGMAP }}"
              key: "{{ .Values.deployment.initContainer.env.DB_SCHEMA_KEY }}"
