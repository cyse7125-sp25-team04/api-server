namespace: webapp

deployment:
  name: webapp
  replicas: 1
  labels:
    app: myapp
  serviceAccountName: pod-service-account
  imagePullSecrets:
    - name: docker-login-secret
  container:
    name: webapp
    image: csye712504/api-server:latest
    imagePullPolicy: Always
    ports:
      - containerPort: 8080
    env:
      DB_HOST: database-service.webapp.svc.cluster.local
      DB_PORT_CONFIGMAP: webapp-config  # Reference to the configMap for DB_PORT
      DB_PORT_KEY: DB_PORT
      DB_USERNAME_SECRET: database-secrets
      DB_USERNAME_KEY: DB_USERNAME
      DB_PASSWORD_SECRET: database-secrets
      DB_PASSWORD_KEY: DB_PASSWORD
      DB_NAME_CONFIGMAP: webapp-config
      DB_NAME_KEY: DB_NAME
      STORAGE_BUCKET_NAME: your-bucket-name-001
      GOOGLE_PROJECT_ID: gcp-dev-7125
  initContainer:
    name: flyway-init-container
    image: csye712504/flyway:latest
    imagePullPolicy: Always
    env:
      DB_HOST: database-service.webapp.svc.cluster.local
      DB_PORT_CONFIGMAP: webapp-config
      DB_PORT_KEY: DB_PORT
      DB_USERNAME_SECRET: database-secrets
      DB_USERNAME_KEY: DB_USERNAME
      DB_PASSWORD_SECRET: database-secrets
      DB_PASSWORD_KEY: DB_PASSWORD
      DB_NAME_CONFIGMAP: webapp-config
      DB_NAME_KEY: DB_NAME
      DB_SCHEMA_CONFIGMAP: webapp-config
      DB_SCHEMA_KEY: DB_SCHEMA

configMap:
  name: webapp-config
  data:
    DB_NAME: api
    DB_SCHEMA: appi
    DB_PORT: "3306"
    APP_PORT: "8080"

secrets:
  dockerSecret:
    name: docker-login-secret
    data: 
      dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJjc3llNzEyNUBnbWFpbC5jb20iLCJwYXNzd29yZCI6ImRja3JfcGF0X1ZXcHU2ampEbGhwc2JlWjVkaTdxcmhqSUxpUSIsImVtYWlsIjoiY3N5ZTcxMjVAZ21haWwuY29tIiwiYXV0aCI6IlkzTjVaVGN4TWpWQVoyMWhhV3d1WTI5dE9tUmphM0pmY0dGMFgxWlhjSFUyYW1wRWJHaHdjMkpsV2pWa2FUZHhjbWhxU1V4cFVRPT0ifX19
  databaseSecret:
    name: database-secrets
    data:
      DB_USERNAME: cm9vdA==  # Base64 encoded
      DB_PASSWORD: ZGF0YWJhc2U=  # Base64 encoded

services:
  webapp:
    name: webapp-service
    type: LoadBalancer
    port: 8080
    targetPort: 8080
    selector:
      app: myapp

  database:
    name: database-service
    selector:
      app: database
    clusterIP: None
    port: 3306
    targetPort: 3306

database:
  name: database
  replicas: 1
  serviceName: database-service
  container:
    name: mysql
    image: mysql:5.7
    ports:
      - containerPort: 3306
        name: web
    args:
      - "--ignore-db-dir=lost+found"
    volumeMounts:
      - name: mysql-data
        mountPath: /var/lib/mysql
    env:
      MYSQL_ROOT_PASSWORD_SECRET: database-secrets
      MYSQL_ROOT_PASSWORD_KEY: DB_PASSWORD
      MYSQL_INITDB_SKIP_TZINFO: "yes"
  storage:
    storageClassName: gcp-storage
    size: 1Gi

storageClasses:
  gcp:
    name: gcp-storage
    provisioner: pd.csi.storage.gke.io
    reclaimPolicy: Retain
    volumeBindingMode: Immediate
    allowVolumeExpansion: true

serviceAccount:
  name: pod-service-account
  annotations:
    iam.gke.io/gcp-service-account: bucket-updater@your-gcp-project.iam.gserviceaccount.com
